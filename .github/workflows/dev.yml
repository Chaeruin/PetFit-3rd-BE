name: Petfit-Backend CI/CD Development Workflow

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Create resources directory
        run: mkdir -p ./src/main/resources

      - name: Create and Upload application.yml
        run: |
          touch ./src/main/resources/application.yml
          echo -e "${{secrets.APPLICATION}}" | base64 --decode > ./src/main/resources/application.yml

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
          
      - name: Move JAR next to Dockerfile
        run: |
          cp build/libs/*.jar ./

      - name: ðŸ“‚ Show JAR file
        run: ls -al build/libs

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/petfit-web -f ./Dockerfile ./

      - name: Push to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/petfit-web

      - name: Docker Image Pull & Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker ps -qa | grep -v $(docker ps -qa --filter "name=petfit-postgres") | xargs -r docker rm -f
            docker pull ${{secrets.DOCKER_USERNAME}}/petfit-web:latest
            docker compose up -d
            docker image prune -f
